package com.gcaa.resource.metrics.collector;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import com.gcaa.metrics.domain.model.Category;
import com.gcaa.metrics.domain.model.DiskType;
import com.gcaa.metrics.domain.model.HardDisk;
import com.gcaa.metrics.domain.model.Resource;
import com.gcaa.resource.metrics.config.DiskSpaceCollectorProperties;
import oshi.SystemInfo;
import oshi.hardware.HWDiskStore;
import oshi.hardware.HWPartition;
import oshi.software.os.FileSystem;
import oshi.software.os.OSFileStore;
import static com.gcaa.metrics.domain.util.NumberUtils.*;
import java.io.File;
import java.util.ArrayList;
import java.util.List;

import javax.swing.filechooser.FileSystemView;

@Component
public class DiskSpaceCollector implements Collector {

	private SystemInfo systemInfo;
	
	private static Logger LOGGER = LoggerFactory.getLogger(DiskSpaceCollector.class);

	private DiskSpaceCollectorProperties collectorProperties;
	
	@Autowired
	public DiskSpaceCollector(SystemInfo systemInfo, DiskSpaceCollectorProperties collectorProperties) {
		this.systemInfo = systemInfo;
		this.collectorProperties = collectorProperties;
	}

	public List<? extends Resource> collectDisksSpace() {
		
		List<HardDisk> hardDisks = new ArrayList<HardDisk>();
		LOGGER.info("Disk Memory Metrics Collector Started ");
		HWDiskStore[] disks = systemInfo.getHardware().getDiskStores();
		
		if(disks.length > 0) {
			for (HWDiskStore HWDisk : disks) {
				long totakDiskUsed = 0;
				for (HWPartition hwPartition : HWDisk.getPartitions()) {
					
					String name = (hwPartition.getMountPoint()==null || hwPartition.getMountPoint().isEmpty()) ? hwPartition.getName() : hwPartition.getMountPoint();
					File file = new File(hwPartition.getMountPoint());
					long partitionUsed = ( (hwPartition.getSize() - file.getFreeSpace()) / collectorProperties.getUnit()); 
					long partionSize =  hwPartition.getSize() / collectorProperties.getUnit();
					
				//	if(hwPartition.getMountPoint()!=null && !hwPartition.getMountPoint().isEmpty() ) {
						HardDisk partition = new HardDisk(floatFormatter(partitionUsed), floatFormatter(partionSize),name);
						hardDisks.add(partition);
						totakDiskUsed = totakDiskUsed + partitionUsed;
				//	}
				}
				
				HardDisk disk = new HardDisk(floatFormatter(totakDiskUsed), floatFormatter(HWDisk.getSize() / collectorProperties.getUnit()),Category.DISK.name());
				hardDisks.add(disk);
				
			}
		}else {
			LOGGER.info("{ No drive found ...}");
		}
	
		LOGGER.info("{ Memory Metrics Collector Finished. " + hardDisks + " }");
		return hardDisks;

	}

	@Override
	public Resource collect() {
		LOGGER.warn("Not implemented");
		return null;
	}
	@Override
	public Resource collectByProcessId(int processId) {
		LOGGER.warn("Not implemented");
		return null;
	}
	
	
}

	
